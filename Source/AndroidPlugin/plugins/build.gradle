apply plugin: 'com.android.library'

android {
    compileSdkVersion 26



    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:26.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation files('libs/classes.jar')
}

//task to delete the old jar
task deleteOldJar(type: Delete) {
//    delete 'release/AndroidPlugin.jar'
    delete '../../../Assets/Plugins/Android/AndroidPlugins.jar'
}

//task to export contents as jar
task exportJar(type: Copy) {
    from('build/intermediates/bundles/release/')//复制此目录中到文件
//    into('release/')//复制到指定目标目录
    into('../../../Assets/Plugins/Android/')

    include('classes.jar')//包含
    //exclude //排除

    ///Rename the jar
    rename('classes.jar', 'AndroidPlugins.jar')//在复制时重命名文件
}

exportJar.dependsOn(deleteOldJar, build)